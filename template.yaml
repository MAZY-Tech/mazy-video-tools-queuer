AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AWS SAM template for MAZY Video Tools Queuer Lambda functions.

Globals:
  Function:
    Timeout: 30
    Runtime: python3.12
    MemorySize: 256
    EphemeralStorage:
      Size: 512

Parameters:
  VpcSubnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: VPC subnet IDs for Lambda functions
  VpcSecurityGroups:
    Type: List<AWS::EC2::SecurityGroup::Id>
    Description: VPC security group IDs for Lambda functions

  S3Bucket:
    Type: String
    Description: Name of the S3 bucket that triggers ingestion

  DatabaseHost:
    Type: String
    Default: localhost
    Description: MongoDB host
  DatabaseUser:
    Type: String
    Default: root
    Description: MongoDB username
  DatabasePassword:
    Type: String
    Default: password
    Description: MongoDB password
    NoEcho: true
  DatabaseName:
    Type: String
    Default: testdb
    Description: MongoDB database name

  InboundQueueUrl:
    Type: String
    Description: Inbound Queue URL
  InboundQueueArn:
    Type: String
    Description: Inbound Queue ARN

  NotificationQueueUrl:
    Type: String
    Description: Notification Queue URL
  NotificationQueueArn:
    Type: String
    Description: Notification Queue ARN

  SentryDSN:
    Type: String
    Description: DSN (Data Source Name) for your Sentry project

Resources:
  # SQS
  ProgressUpdatesDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: mazy-video-tools-progress-updates-dlq
      MessageRetentionPeriod: 1209600

  ProgressUpdatesQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: mazy-video-tools-progress-updates
      VisibilityTimeout: 60
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt ProgressUpdatesDeadLetterQueue.Arn
        maxReceiveCount: 5

  # Lambdas
  VideoS3HandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: mazy-video-tools-video-s3-handler
      Description: Receive S3 video-upload events and enqueue to InboundQueue
      CodeUri: functions/video_s3_handler/src/
      Handler: lambda_function.lambda_handler
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/LabRole
      VpcConfig:
        SubnetIds: !Ref VpcSubnets
        SecurityGroupIds: !Ref VpcSecurityGroups
      Environment:
        Variables:
          S3_BUCKET: !Ref S3Bucket
          DATABASE_HOST: !Ref DatabaseHost
          DATABASE_USER: !Ref DatabaseUser
          DATABASE_PASSWORD: !Ref DatabasePassword
          DATABASE_NAME: !Ref DatabaseName
          INBOUND_QUEUE_URL: !Ref InboundQueueUrl
      Policies:
      - AWSLambdaBasicExecutionRole
      - Statement:
          Effect: Allow
          Action:
          - s3:GetObject
          Resource: !Sub arn:aws:s3:::${S3Bucket}/*
      - Statement:
          Effect: Allow
          Action:
          - sqs:SendMessage
          Resource: !Ref InboundQueueArn

  VideoS3HandlerPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt VideoS3HandlerFunction.Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn: !Sub arn:aws:s3:::${S3Bucket}

  VideoProgressUpdatesFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: mazy-video-tools-video-progress-updates
      Description: Process video progress, success and failure updates from ProgressUpdatesQueue
      CodeUri: functions/video_progress_updates/src/
      Handler: lambda_function.lambda_handler
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/LabRole
      VpcConfig:
        SubnetIds: !Ref VpcSubnets
        SecurityGroupIds: !Ref VpcSecurityGroups
      Environment:
        Variables:
          DATABASE_HOST: !Ref DatabaseHost
          DATABASE_USER: !Ref DatabaseUser
          DATABASE_PASSWORD: !Ref DatabasePassword
          DATABASE_NAME: !Ref DatabaseName
          NOTIFICATION_QUEUE_URL: !Ref NotificationQueueUrl
      Policies:
      - AWSLambdaBasicExecutionRole
      - Statement:
          Effect: Allow
          Action:
          - sqs:ReceiveMessage
          - sqs:DeleteMessage
          - sqs:GetQueueAttributes
          Resource: !GetAtt ProgressUpdatesQueue.Arn
      - Statement:
          Effect: Allow
          Action:
          - sqs:SendMessage
          Resource: !Ref NotificationQueueArn
      Events:
        ProgressUpdatesQueueEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt ProgressUpdatesQueue.Arn
            BatchSize: 5
